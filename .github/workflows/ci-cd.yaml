name: angular & asp core sample

on:
  workflow_dispatch:
  push:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # Installer Node.js pour le build Angular
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x

    # Installer .NET SDK
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Restaurer les dépendances .NET
    - name: Restore .NET Dependencies
      run: dotnet restore Angular-and-ASP.NET-Core-Sample-App.csproj

    # Build .NET
    - name: Build .NET
      run: dotnet build Angular-and-ASP.NET-Core-Sample-App.csproj --no-restore

    # Publier l'application en self-contained
    - name: Publish .NET
      env:
        NODE_OPTIONS: --openssl-legacy-provider   # Fix pour Node/OpenSSL
      run: dotnet publish "Angular-and-ASP.NET-Core-Sample-App.csproj" -c Release -o ./publish --self-contained -r linux-x64 /p:UseAppHost=true

    # Compresser les fichiers publiés
    - name: Zip Artifact
      run: zip -r app.zip ./publish

    # Upload de l'artefact
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: dotnet-webapp
        path: app.zip

  # juste pour créer (ne marche pas)    
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: dotnet-webapp

      - name: Azure Login
        uses: azure/login@v2
        with: ## creds argument (github expression syntax) pour reférencer différents contextes sur github
          creds: ${{ secrets.AZURE_CREDENTIALS }} 

      - name: Deploy to Azure
        uses: azure/webapps-deploy@v2
        with:
          app-name: app-wiredbrainapi
          package: app.zip

